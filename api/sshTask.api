syntax = "v1"

type (
	// 定义获取ssh信息的 json 请求体
	GETSSHInfoReq {
		Id int64 `json:"id"`
	}
	// 定义获取ssh信息的 json 响应体
	GETSSHInfoResp {
		Id       int64  `json:"id"` // Primary Key
		Ip       string `json:"ip"`
		Name     string `json:"name"`
		Account  string `json:"account"`
		Password string `json:"password"`
		Brand    string `json:"brand"`  // only for cisco, huawei
		Script   string `json:"script"` // script for task. Statements are separated with ;
		Desc     string `json:"desc"`   // task desc
	}
	AddSSHInfoReq {
		Ip       string `json:"ip"`
		Name     string `json:"name"`
		Account  string `json:"account"`
		Password string `json:"password"`
		Brand    string `json:"brand"`  // only for cisco, huawei
		Script   string `json:"script"` // script for task. Statements are separated with ;
		Desc     string `json:"desc"`   // task desc
	}
	AddSSHInfoResp {
		Id int64 `json:"id"` // Primary Key
	}
	UpdateSSHInfoReq {
		Id       int64  `json:"id"` // Primary Key
		Ip       string `json:"ip"`
		Name     string `json:"name"`
		Account  string `json:"account"`
		Password string `json:"password"`
		Brand    string `json:"brand"`  // only for cisco, huawei
		Script   string `json:"script"` // script for task. Statements are separated with ;
		Desc     string `json:"desc"`   // task desc
	}
	UpdateSSHInfoResp {
		Id int64 `json:"id"` // Primary Key
	}
	DELETESSHInfoReq {
		Id int64 `json:"id"`
	}
	DELETESSHInfoResp {
		Id int64 `json:"id"`
	}
	EchoReq {
		Msg string `json:"string"`
	}
	EchoResp {
		Msg string `json:"string"`
	}
	SwitchBrandResp {
		Id   int64  `json:"id"` // Primary Key
		Name string `json:"name"`
	}
	// 定义更新用户信息的 json 请求体
	RunCmdReq {
		Ip       string `json:"ip"`
		Account  string `json:"account"`
		Password string `json:"password"`
		Brand    string `json:"brand"`  // only for cisco, huawei
		Script   string `json:"script"` // script for task. Statements are separated with ;
	}
	RunCmdResp {
		Id int64 `json:"id"` // 返回文件id號, 用它來下載
	}
	DownloadCmdResultReq {
		Id int64 `json:"id"`
	}
)

@server (
	group: sshtask
	prefix: /api/v1
)
service sshtask {
	@handler echoMsg
	get /echo(EchoReq) returns(EchoResp)

	@handler getSshTaskInfo
	get /sshtask(GETSSHInfoReq) returns ([]GETSSHInfoResp)

	@handler addSshTaskInfo
	post /sshtask(AddSSHInfoReq) returns (AddSSHInfoResp)

	@handler updateSshTaskInfo
	put /sshtask(UpdateSSHInfoReq) returns (UpdateSSHInfoResp)

	@handler deleteSshTaskInfo
	delete /sshtask(DELETESSHInfoReq) returns (DELETESSHInfoResp)

	@handler getSwitchBrand
	get /switchBrand() returns (SwitchBrandResp)

	@handler runCmd
	post /runCmd(RunCmdReq) returns (RunCmdResp)

	@handler downloadCmdResult
	get /getCmdResult(DownloadCmdResultReq)
}